services:
  geoserver:
    image: kartoza/geoserver:latest
    container_name: geoserver
    ports:
      - "8080:8080"
    environment:
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=geoserver
      - GEOSERVER_ADMIN_EMAIL=admin@example.com
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
      - GEOSERVER_LOG_LEVEL=INFO
      - GEOWEBCACHE_CACHE_DIR=/opt/geoserver/gwc
      - GEOSERVER_LOG_LOCATION=/opt/geoserver/logs/geoserver.log
      - GEOSERVER_LOG_LEVEL=INFO
      - GEOWEBCACHE_LOG_LOCATION=/opt/geoserver/logs/gwc.log
      - GEOWEBCACHE_LOG_LEVEL=INFO
      - GEOSERVER_LOG_LEVEL=INFO
      - GEOWEBCACHE_LOG_LEVEL=INFO
      - GEOSERVER_LOG_LOCATION=/opt/geoserver/logs/geoserver.log
      - GEOWEBCACHE_LOG_LOCATION=/opt/geoserver/logs/gwc.log
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
      - geoserver_logs:/opt/geoserver/logs
      - geoserver_gwc:/opt/geoserver/gwc
    restart: unless-stopped
    networks:
      - geoserver_network

  postgres:
    image: postgis/postgis:15-3.4
    container_name: geoserver_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=geograph_layer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - geoserver_network

volumes:
  geoserver_data:
  geoserver_logs:
  geoserver_gwc:
  postgres_data:

networks:
  geoserver_network:
    driver: bridge
